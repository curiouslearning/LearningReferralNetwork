# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from models.base_model_ import Model
from common import util


class Summary(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, id: int=None, locale: str=None, platform_id: str=None, title: str=None):  # noqa: E501
        """Summary - a model defined in Swagger

        :param description: The description of this Summary.  # noqa: E501
        :type description: str
        :param id: The id of this Summary.  # noqa: E501
        :type id: int
        :param locale: The locale of this Summary.  # noqa: E501
        :type locale: str
        :param platform_id: The platform_id of this Summary.  # noqa: E501
        :type platform_id: str
        :param title: The title of this Summary.  # noqa: E501
        :type title: str
        """
        self.swagger_types = {
            'description': str,
            'id': int,
            'locale': str,
            'platform_id': str,
            'title': str
        }

        self.attribute_map = {
            'description': 'description',
            'id': 'id',
            'locale': 'locale',
            'platform_id': 'platform_id',
            'title': 'title'
        }

        self._description = description
        self._id = id
        self._locale = locale
        self._platform_id = platform_id
        self._title = title

    @classmethod
    def from_dict(cls, dikt) -> 'Summary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Summary of this Summary.  # noqa: E501
        :rtype: Summary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self) -> str:
        """Gets the description of this Summary.

        Additional description of the application on the referral UI if we don’t want our users to be redirected out of the application to see this information  # noqa: E501

        :return: The description of this Summary.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Summary.

        Additional description of the application on the referral UI if we don’t want our users to be redirected out of the application to see this information  # noqa: E501

        :param description: The description of this Summary.
        :type description: str
        """

        self._description = description

    @property
    def id(self) -> int:
        """Gets the id of this Summary.

        Unique application ID within the database  # noqa: E501

        :return: The id of this Summary.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Summary.

        Unique application ID within the database  # noqa: E501

        :param id: The id of this Summary.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def locale(self) -> str:
        """Gets the locale of this Summary.

        ISO 639 Locale Code (ie. “en-us”)  # noqa: E501

        :return: The locale of this Summary.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale: str):
        """Sets the locale of this Summary.

        ISO 639 Locale Code (ie. “en-us”)  # noqa: E501

        :param locale: The locale of this Summary.
        :type locale: str
        """

        self._locale = locale

    @property
    def platform_id(self) -> str:
        """Gets the platform_id of this Summary.

        Platform specific unique identifier for the application. This would be package name for Android, bundle ID for iOS and URL for web-based applications.  # noqa: E501

        :return: The platform_id of this Summary.
        :rtype: str
        """
        return self._platform_id

    @platform_id.setter
    def platform_id(self, platform_id: str):
        """Sets the platform_id of this Summary.

        Platform specific unique identifier for the application. This would be package name for Android, bundle ID for iOS and URL for web-based applications.  # noqa: E501

        :param platform_id: The platform_id of this Summary.
        :type platform_id: str
        """
        if platform_id is None:
            raise ValueError("Invalid value for `platform_id`, must not be `None`")  # noqa: E501

        self._platform_id = platform_id

    @property
    def title(self) -> str:
        """Gets the title of this Summary.

        Title of the application to be displayed on the referral UI  # noqa: E501

        :return: The title of this Summary.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Summary.

        Title of the application to be displayed on the referral UI  # noqa: E501

        :param title: The title of this Summary.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")  # noqa: E501

        self._title = title
